{"version":3,"sources":["service/auth.service.js","components/ui/navbar/Navbar.js","components/pages/index/Index-page.js","service/countries.js","components/pages/signup/Signup.js","service/foods.js","components/pages/food-form/CreateFoodForm.js","components/ui/pop-up/ModalPopUp.js","components/pages/foods/FoodIndex.js","components/pages/food-details/FoodDetails.js","components/pages/statistics/FoodStats.js","components/pages/diet/Diets.js","components/App.js","index.js"],"names":["services","signup","username","password","country","service","post","login","logout","isLoggedIn","get","this","axios","create","baseURL","withCredentials","Navigation","props","setTheUser","localStorage","setItem","JSON","stringify","authService","history","push","AuthService","Navbar","expand","Brand","as","loggedInUser","to","Toggle","aria-controls","Collapse","id","Nav","Link","onClick","style","cursor","Text","className","Component","IndexPage","handleInputChange","e","loginInfoCopy","state","loginInfo","target","name","value","setState","handleSubmit","preventDefault","then","response","data","catch","err","console","log","errorMessage","Container","Row","Col","md","Form","onSubmit","Group","controlId","Label","Control","type","onChange","display","Button","variant","marginTop","marginLeft","textAlign","backgroundColor","color","borderRadius","padding","getCountries","Signup","getAllCountries","countryService","countries","componentDidMount","CountriesService","span","offset","method","map","elm","idx","key","getFoods","getFood","foodId","saveFood","newFood","deleteFood","delete","editFood","productId","object","put","CreateFoodForm","handleCheckBox","importTax","checked","showInfo","editProductModal","foodsService","newProductModal","stateCopy","origin","split","trim","owner_id","_id","finishFoodPost","toString","description","img","price","kcal","protein","fat","carbs","stock","FoodsService","paddingTop","marginBottom","placeholder","required","Check","label","width","ModalPopUp","show","children","onClose","title","message","FoodsIndex","handleOnChange","search","searchBar","toggleModal","modalName","foods","filteredFood","food","filter","product","toLowerCase","includes","getAllFood","handleDelete","setTimeout","showModalEdit","toastModal","toastAfterModal","position","margin","Modal","onHide","Body","Table","src","alt","textDecoration","icon","faTrashAlt","faEdit","length","FoodDetails","getOneFood","match","params","Card","Tabs","defaultActiveKey","Tab","eventKey","undefined","goBack","FoodStats","bringFoods","slice","properties","foodNames","f","nutritionValues","Object","keys","propertyKey","newData","property","FoodPrices","nutritionalComparison","height","indexBy","top","right","bottom","left","colors","scheme","defs","background","size","stagger","rotation","lineWidth","spacing","fill","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","from","modifiers","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","animate","motionStiffness","motionDamping","innerRadius","padAngle","borderWidth","borderColor","radialLabelsLinkDiagonalLength","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","itemTextColor","symbolShape","maxValue","curve","gridLevels","gridShape","gridLabelOffset","enableDots","dotSize","dotColor","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","fillOpacity","blendMode","isInteractive","Diets","sort","a","b","FoodProtein","FoodKcal","foodCarbs","Accordion","alignItems","Header","paddingLeft","justifyContent","cornerRadius","radialLabelsLinkHorizontalLength","sm","fontSize","App","userObj","fetchUser","currentUser","parse","exact","render","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.64b04f99.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class services {\n    constructor() {\n        this.service = axios.create({\n            baseURL: 'https://reactr-realfooder.herokuapp.com/api/auth',\n            withCredentials: true\n        })\n    }\n\n    signup = ({ username, password, country }) => this.service.post('/signup', { username, password, country })\n    login = ({ username, password }) => this.service.post('/login', { username, password })\n    logout = () => this.service.post('/logout')\n    isLoggedIn = () => this.service.get('/loggedin') \n}","import React, { Component } from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nimport AuthService from '../../../service/auth.service'\n\nimport { Link } from 'react-router-dom'\n\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n    }\n\n    logout = () => {\n        this.props.setTheUser(false)\n        localStorage.setItem('currentUser', JSON.stringify(null))\n        this.authService.logout()\n        this.props.history.push('/')\n    }\n\n    render() {\n\n        return (\n            <Navbar expand=\"md\">\n                <Navbar.Brand as=\"div\">\n                    {\n                        this.props.loggedInUser ?\n                        <div>RealFooder!</div>\n                        :\n                        <Link to=\"/\">RealFooder!</Link>\n                    }\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav>\n                        <Nav.Link as=\"div\"><Link to=\"/alimentos\">Alimentos</Link></Nav.Link>\n                        <Nav.Link as=\"div\"><Link to=\"/estadisticas\">Estadísticas</Link></Nav.Link>\n                        <Nav.Link as=\"div\"><Link to=\"/dietas\">Dietas</Link></Nav.Link>\n                        {\n                            !this.props.loggedInUser ?\n                                <>\n                                    <Nav.Link as=\"div\"><Link to=\"/\">Iniciar sesión</Link></Nav.Link>\n                                    <Nav.Link as=\"div\"><Link to=\"/signup\">Registro</Link></Nav.Link>\n                                </>\n                                :\n                                <>\n                                    <Nav.Link as=\"div\" onClick={this.logout} style={{cursor:'pointer'}}>Cerrar sesión</Nav.Link>\n                                </>\n\n                        }\n\n                    </Nav>\n                    <Navbar.Text className=\"ml-auto\"> Hola, {this.props.loggedInUser ? this.props.loggedInUser.username : 'invitad@'}</Navbar.Text>\n                </Navbar.Collapse>\n\n            </Navbar>\n        )\n    }\n\n}\n\nexport default Navigation","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport AuthService from '../../../service/auth.service'\n\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { Link } from 'react-router-dom'\n\n\nclass IndexPage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loginInfo: {\n                username: '',\n                password: ''\n            },\n            errorMessage: ''\n        }\n        this.authService = new AuthService()\n    }\n\n    handleInputChange = e => {\n\n        let loginInfoCopy = { ...this.state.loginInfo }\n        const { name, value } = e.target\n        loginInfoCopy = { ...loginInfoCopy, [name]: value }\n\n        this.setState({ loginInfo: loginInfoCopy })\n    }\n\n    handleSubmit = e => { \n        e.preventDefault()\n\n        this.authService.login(this.state.loginInfo)\n            .then(response => {\n                localStorage.setItem('currentUser', JSON.stringify(response.data))\n                this.props.setTheUser(response.data)\n                this.props.history.push('/alimentos')\n            })\n            .catch(err => console.log(err))\n    }\n\n    render(){\n        return (\n            <Container className=\"index-page\">\n                <Row className='background-index'>\n                    <Col md={4}>\n\n                        <h3>Inicio de sesión</h3>\n                        <hr></hr>\n                        <Form onSubmit={this.handleSubmit}>\n\n                            <Form.Group controlId=\"name\">\n                                <Form.Label>Usuario</Form.Label>\n                                <Form.Control name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInputChange} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"pwd\">\n                                <Form.Label>Contraseña</Form.Label>\n                                <Form.Control name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleInputChange} />\n                            </Form.Group>\n\n                            <p className='error-message' style={{ display: this.state.errorMessage ? 'block' : 'none' }}>\n                                {this.state.errorMessage}\n                            </p>\n\n                            <Button variant=\"dark\" type=\"submit\">Iniciar sesión</Button>\n                        </Form>\n                        <p><small>¿No tienes cuenta? <Link to=\"/signup\">Regístrate</Link></small></p>\n                    </Col>\n\n                    <Col md={7} style={{marginTop: '20px'}}>\n                        <header style={{marginLeft: '60px', textAlign: 'center', backgroundColor: 'transparent', color: '#333', borderRadius: '10px', padding: '50px 0'}}>\n                            <h1>RealFooder</h1>\n                            <p>Una sencilla SPA de alimentación</p>\n                        </header>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\nexport default IndexPage","import axios from 'axios'\n\nexport default class services {\n    constructor() {\n        this.service = axios.create({\n            baseURL: 'https://reactr-realfooder.herokuapp.com/api/countries',\n            withCredentials: true\n        })\n    }\n    getCountries = () => this.service.get('/')\n}","import React, { Component } from 'react'\nimport AuthService from './../../../service/auth.service'\nimport CountriesService from './../../../service/countries'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { Link } from 'react-router-dom'\n\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            countries: [],\n            loginInfo: {\n                country: '',\n                username: '',\n                password: ''\n            },\n            errorMessage: ''\n        }\n        this.authService = new AuthService()\n        this.countryService = new CountriesService()\n    }\n\n    getAllCountries = () =>{\n        this.countryService.getCountries()\n            .then(response => this.setState({countries: response.data}))\n            .catch(err => console.log(err))\n    }\n\n    componentDidMount = () =>{\n        this.getAllCountries()\n    }\n\n\n    handleInputChange = e => {\n        let loginInfoCopy = { ...this.state.loginInfo }\n        const { name, value } = e.target\n        loginInfoCopy = { ...loginInfoCopy, [name]: value }\n        this.setState({ loginInfo: loginInfoCopy })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.authService.signup(this.state.loginInfo)\n            .then(response => {\n                this.props.setTheUser(response.data)\n                this.props.history.push('/alimentos')\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n        return (\n            <Container>\n                <Row className='background-index' style={{marginTop: '65px'}}>\n                    <Col md={{ span: 4, offset: 4 }}>\n\n                        <h3>Registro de usuario</h3>\n                        <hr></hr>\n                        <Form onSubmit={this.handleSubmit} method=\"POST\">\n\n                            <Form.Group controlId=\"name\">\n                                <Form.Label>Usuario</Form.Label>\n                                <Form.Control name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInputChange} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"pwd\">\n                                <Form.Label>Contraseña</Form.Label>\n                                <Form.Control name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleInputChange} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"select\">\n                                <Form.Label>País</Form.Label>\n                                <Form.Control as=\"select\" name=\"country\" value={this.state.country} onChange={this.handleInputChange}>\n                                    <option>Selecciona un país</option>\n                                    {this.state.countries.map((elm,idx) => <option key={idx}>{elm.name}</option>)} \n                                </Form.Control>\n                            </Form.Group>\n\n                            <p\n                                className='error-message'\n                                style={{ display: this.state.errorMessage ? 'block' : 'none' }}>{this.state.errorMessage}\n                            </p>\n\n                            <Button variant=\"dark\" type=\"submit\">Registrarme</Button>\n                        </Form>\n\n                        <p><small>¿Ya tienes cuenta? <Link to=\"/\">Inicia sesión</Link></small></p>\n\n                    </Col>\n                </Row>\n\n            </Container>\n        )\n    }\n}\n\n\nexport default Signup","import axios from 'axios'\n\nexport default class services {\n    constructor() {\n        this.service = axios.create({\n            baseURL: 'https://reactr-realfooder.herokuapp.com/api/foods',\n            withCredentials: true\n        })\n    }\n    getFoods = () => this.service.get('/')\n    getFood = foodId => this.service.get(`/details/${foodId}`)\n    saveFood = newFood => this.service.post(`/newFood`, newFood)\n    deleteFood = id => this.service.delete(`/delete/${id}`)\n    editFood = (productId, object) => this.service.put(`/edit/${productId}`, object)\n}","import React, { Component } from 'react'\nimport FoodsService from '../../../service/foods'\nimport Container from 'react-bootstrap/Container'\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nclass CreateFoodForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            description: '',\n            img: '',\n            price: 0,\n            kcal: 0,\n            protein: 0,\n            fat: 0,\n            carbs: 0,\n            stock: 0,\n            importTax: false,\n            origin: ''\n        }\n        this.foodsService = new FoodsService()\n    }\n\n    handleInputChange = e => {      \n        const { name, value } = e.target\n        this.setState({[name] : value})\n    }\n\n    handleCheckBox = (e) => {\n        this.setState({importTax : e.target.checked})\n    }\n\n    showInfo = () =>{ \n        if(this.props.editProductModal){\n            const id = this.props.productId\n            this.foodsService.getFood(id)\n                .then(response => this.setState( response.data ))\n                .catch(err => console.log(err))\n        }\n    }\n\n    componentDidMount = () => {\n        this.showInfo()\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        if(this.props.newProductModal){\n            const stateCopy = { ...this.state }\n            stateCopy.origin = stateCopy.origin.split(',').map(elm => elm.trim())\n            stateCopy.owner_id = this.props.loggedInUser._id\n    \n            this.foodsService.saveFood(stateCopy)\n                .then(() => {\n                    this.props.finishFoodPost()\n                })\n                .catch(err => console.log(err))\n        }\n        if(this.props.editProductModal){\n            const id = this.state._id\n            const stateCopy = {...this.state}\n            stateCopy.origin = stateCopy.origin.toString().split(',').map(elm => elm.trim()) \n            stateCopy.owner_id = this.props.loggedInUser._id\n\n            this.foodsService.editFood(id, stateCopy)\n            .then(() =>{\n                this.props.finishFoodPost()\n            })\n            .catch(err => console.log(err))\n        }\n    }\n\n    render() {\n        return (\n            <Container as=\"section\" style={{paddingTop: '0px'}}>\n\n                <Row> \n                    <h1 style={{marginLeft: '15px', marginTop: '8px', marginBottom: 0}}>\n                        { !this.props.editProductModal ? 'Crear Nuevo Alimento' : 'Editar Alimento'}\n                    </h1>  \n                </Row>\n                <hr/>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Row>\n                        <Col>\n\n                            <Form.Group controlId=\"name\">\n                                <Form.Label>Nombre</Form.Label>\n                                <Form.Control name=\"name\" type=\"text\" placeholder=\"Nombre del producto\" value={this.state.name} onChange={this.handleInputChange} required/>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"description\">\n                                <Form.Label>Descripción</Form.Label>\n                                <Form.Control name=\"description\" as=\"textarea\" placeholder=\"Descripción del producto\" value={this.state.description} onChange={this.handleInputChange} required/>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"originCountry\">\n                                <Form.Label>Países de origen (separar por comas)</Form.Label>\n                                <Form.Control name=\"origin\" type=\"text\" placeholder=\"País(es) de origen\" value={this.state.origin} onChange={this.handleInputChange} required/>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"productImage\">\n                                <Form.Label>Imagen (URL)</Form.Label>\n                                <Form.Control name=\"img\" type=\"text\" placeholder=\"http://\" value={this.state.img} onChange={this.handleInputChange} required/>\n                            </Form.Group>\n\n                        </Col>\n                        <Col>\n                            <Row>\n\n                                <Col>\n                                    <Form.Group controlId=\"price\">\n                                        <Form.Label>Precio</Form.Label>\n                                        <Form.Control name=\"price\" type=\"number\"  value={this.state.price} onChange={this.handleInputChange} required/>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"protein\">\n                                        <Form.Label>Proteínas</Form.Label>\n                                        <Form.Control name=\"protein\" type=\"number\"  value={this.state.protein} onChange={this.handleInputChange} required/>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"carbs\">\n                                        <Form.Label>Carbohidratos</Form.Label>\n                                        <Form.Control name=\"carbs\" type=\"number\"  value={this.state.carbs} onChange={this.handleInputChange} required/>\n                                    </Form.Group>\n\n                                </Col>\n                                <Col>\n                                    <Form.Group controlId=\"kcal\">\n                                        <Form.Label>Kcal</Form.Label>\n                                        <Form.Control name=\"kcal\" type=\"number\"  value={this.state.kcal} onChange={this.handleInputChange} required/>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"fat\">\n                                        <Form.Label>Grasas</Form.Label>\n                                        <Form.Control name=\"fat\" type=\"number\"  value={this.state.fat} onChange={this.handleInputChange} required/>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"stock\">\n                                        <Form.Label>Stock</Form.Label>\n                                        <Form.Control name=\"stock\" type=\"number\"  value={this.state.stock} onChange={this.handleInputChange} required/>\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n\n                            <Form.Group controlId=\"importTax\">\n                                <Form.Check name=\"importTax\" type=\"checkbox\" label=\"Aplica impuestos de importación\" checked={this.state.importTax} onChange={this.handleCheckBox}/>\n                            </Form.Group>\n\n                            <Button variant=\"dark\" type=\"submit\" style={{width: '100%'}}>\n                                {!this.props.editProductModal ? 'Crear alimento' : 'Guardar Cambios' }                                   \n                            </Button>     \n                                  \n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default CreateFoodForm","import React, { Component } from 'react'\nimport './ModalPopUp.css';\n\n\nclass ModalPopUp extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            show: props.show\n        }\n    }\n\n    render(){\n        if(this.props.children){\n            return(\n                <>\n                {\n                    \n                    this.props.show &&\n                        <div show={this.props.show} onClose={this.props.onClose}>\n                            <div className='modal-create'>\n                                {this.props.children}\n                            </div>\n                        </div>\n                }\n               </>\n            )\n        }\n\n        return(\n            <>\n            {\n                this.props.show &&\n                    <div show={this.props.show} onClose={this.props.onClose} >\n                        <div className='modal-create'>\n                            <p className='textToast'>{ this.props.title }</p>\n                            <hr/>\n                            <p className='textToast'>{ this.props.message }</p>\n                        </div>\n                    </div>\n            }\n            </>\n        )  \n    }\n}\nexport default ModalPopUp; ","import React, { Component } from 'react'\nimport FoodsService from '../../../service/foods'\n\nimport Container from 'react-bootstrap/Container'\nimport Table from \"react-bootstrap/Table\"\nimport Row from \"react-bootstrap/Row\"\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport CreateFoodForm from '../food-form/CreateFoodForm'\nimport ModalPopUp from '../../ui/pop-up/ModalPopUp'\nimport { Link } from 'react-router-dom'\n\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass FoodsIndex extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newProductModal: false,\n            editProductModal: false,\n            toastModal: false,\n            toastAfterModal: false,\n            food: [],\n            filteredFood: [],\n            search: ''\n        }\n        this.foodsService = new FoodsService()\n    }\n\n\n    handleOnChange = e =>{\n        this.setState({search: e.target.value})\n        this.searchBar(e.target.value)\n    }\n    \n    toggleModal = (modalName) => {\n        this.setState({ [modalName]: !this.state[modalName]})\n    }\n\n    searchBar = (foods) =>{\n        const filteredFood = this.state.food.filter((product) => product.name && product.name.toLowerCase().includes(foods.toLowerCase()))\n        this.setState({ filteredFood: filteredFood }) \n    }\n    \n    getAllFood = () => {\n       this.foodsService.getFoods()\n            .then(response => this.setState( { food: response.data, filteredFood: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    handleDelete = (foodId) => {\n        this.foodsService.deleteFood(foodId)\n            .then(() => {\n                this.toggleModal('toastModal')\n                this.getAllFood()\n                setTimeout(() => {\n                    this.toggleModal('toastModal')\n                }, 3000)\n            })\n            .catch(err => console.log(err))\n    }\n\n    showModalEdit = (productId) =>{\n        this.setState({_id: productId})\n        this.toggleModal('editProductModal')\n    }\n\n    componentDidMount = () => {\n       this.getAllFood()\n    }\n\n    finishFoodPost = () =>{\n        this.getAllFood()\n        if(this.state.newProductModal){\n            this.toggleModal('newProductModal')\n            this.toggleModal('toastAfterModal')\n            setTimeout(() => {\n                this.toggleModal('toastAfterModal')\n            }, 3000)\n        }else {\n            this.toggleModal('editProductModal')\n        }\n    }\n\n    render() {\n        \n        return (\n            <div style={{position:'relative'}}  className='backg-foods'>\n            <Container as=\"section\">\n\n                <Row style={{margin: 0}}>\n                    <header>\n                        <h1>Alimentos</h1>\n                        <p>Consulta los detalles de stock, precios y origen.</p>\n                    </header>\n                </Row>\n\n                <Row className='modal-row' >\n                    <form>\n                        <label>Nombre:</label>\n                        <input type=\"text\" value={this.state.search} className=\"searchBar\" onChange={this.handleOnChange} />\n                    </form>\n                    {\n                        this.props.loggedInUser && \n                        <Button variant=\"outline-dark\" className=\"btn bck-home-btn\" onClick={() => this.toggleModal('newProductModal')}>Añadir nuevo alimento</Button>\n                    }\n                </Row>\n\n                <ModalPopUp show={this.state.toastAfterModal} onClose={() => this.toggleModal('toastAfterModal')} style={{borderRadius: '5px', width: 'inherit'}}>\n                    <p>Mensaje</p>\n                        <hr/>\n                    <p>Producto Creado Correctamente</p>\n                </ModalPopUp>  \n                \n                <Modal show={this.state.newProductModal || this.state.editProductModal} onHide={ () => this.state.editProductModal ? this.toggleModal('editProductModal') : this.toggleModal('newProductModal')} > \n                    <Modal.Body>\n                        {\n                            !this.state.newProductModal ?\n                            <CreateFoodForm finishFoodPost={this.finishFoodPost} editProductModal={this.state.editProductModal} loggedInUser={this.props.loggedInUser} productId={this.state._id} />  \n                            :                  \n                            <CreateFoodForm finishFoodPost={this.finishFoodPost}  newProductModal={this.state.newProductModal} loggedInUser={this.props.loggedInUser}/>                    \n                        }\n                    </Modal.Body>\n                </Modal>\n\n                <Table className=\"table\">     \n                    <tbody>\n                    {this.state.filteredFood.map((elm, idx) => (\n                        <tr key={idx}>\n                            <td>\n                                <img\n                                className=\"product-picture\"\n                                src={elm.img} alt={elm.name}\n                                />\n                            </td>\n                            <td>\n                                <p>{elm.name}</p>\n                            </td>\n                            <td>\n                                <p>\n                                    Precio: {elm.price} € | Stock disponible: {elm.stock}  uds\n                                    { \n                                        this.props.loggedInUser && elm.origin.includes(this.props.loggedInUser.country) &&\n                                        <sup>Proximidad</sup>\n                                    } \n                                </p>\n\n                                 <Link to={`/alimento/${elm._id}`} style={{textDecoration: 'none', color: 'inherit'}}><Button variant=\"outline-dark\">Detalles </Button></Link>\n\n                                {\n                                    this.props.loggedInUser && this.props.loggedInUser._id === elm.owner_id &&  \n                                    <>                                     \n                                    <Button variant=\"outline-dark\" onClick={() => this.handleDelete(elm._id)} ><FontAwesomeIcon icon={faTrashAlt} /></Button>\n                                    <Button variant=\"outline-dark\" onClick={() => this.showModalEdit(elm._id)}> <FontAwesomeIcon icon={faEdit} /></Button>\n                                    </>\n                                }\n\n                            </td>\n                        </tr>\n                    ))}\n                    { \n                        !this.state.filteredFood.length && (\n                        <tr>\n                            <td>\n                                <p>Sin resultados</p>\n                            </td>\n                        </tr>\n                        )\n                    }\n                    </tbody>\n                </Table>\n                \n                <ModalPopUp show={this.state.toastModal} title='Mensaje' message='Producto Borrado Correctamente' onClose={() => this.toggleModal('toastModal')} />\n                    \n            </Container>\n            </div>\n        )\n    }\n}\n\nexport default FoodsIndex","import React, { Component } from 'react'\nimport FoodsService from '../../../service/foods'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport { Card } from 'react-bootstrap'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport Button from 'react-bootstrap/Button'\n\n\nclass FoodDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n        this.foodsService = new FoodsService()\n    }\n\n    getOneFood = () => { \n        const id = this.props.match.params.foodId\n        this.foodsService.getFood(id)\n            .then(response => this.setState(response.data))\n            .catch(err => console.log(err))\n    }\n\n    componentDidMount = () => {\n        this.getOneFood()\n    }\n\n    render() {\n        return (\n            <Container as=\"section\" className='backg-details'>\n                <Row >\n                    <Col md={4}>\n                    <Card>\n                        <h1 style={{textAlign: 'center', marginBottom: '30px'}}>{this.state.name} </h1>\n                            <img src={this.state.img} alt={this.state.name} style={{textAlign: 'center'}}/>\n                    </Card>\n                    </Col>\n                    <Col md={{span: 7, offset: 1, margin: 0}}>\n                        <h2>Especificaciones</h2>\n                        <p>{this.state.description} </p>\n                        <hr/>\n                        <p>Precio: {this.state.price} €</p>\n                        <Tabs defaultActiveKey=\"nutricional\">\n                            <Tab eventKey=\"nutricional\" title=\"Nutricional\">\n                                <h3>Información notricional</h3>\n                                <hr/>\n                                <h6 style={{marginTop: '20px', marginBottom: '20px'}}>Aporte nutricional por 100g</h6>\n                                <ul>\n                                    <li>Calorias: {this.state.kcal}</li>\n                                    <li>Proteínas: {this.state.protein}</li>\n                                    <li>Grasas: {this.state.fat}</li>\n                                    <li>Carbohidratos: {this.state.carbs}</li>\n                                </ul>\n                            </Tab>\n                            <Tab eventKey=\"origen\" title=\"Origen\">\n                                <h3>Origen</h3>\n                                <hr/>\n                                <h6 style={{marginTop: '20px', marginBottom: '20px'}}> {this.state.name} procente de:  </h6>\n                                <ul>\n                                    {\n                                        !this.state.origin ? undefined :\n                                            this.state.origin.map((elm,idx) => <li key={idx}>{elm}</li>)\n                                    }                             \n                                </ul>\n                            </Tab>\n                            <Tab eventKey=\"stock\" title=\"Stock\">\n                                <h3>Stock</h3>\n                                <hr/>\n                                <p>Stock actual: {this.state.stock} unidades en stock </p>\n                            </Tab>\n                        </Tabs>\n                        <Button variant=\"outline-dark\" className=\"bck-home-btn\" onClick={()=> this.props.history.goBack()}>Volver</Button>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default FoodDetails","import React, { Component } from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsivePie } from '@nivo/pie'\nimport { ResponsiveRadar } from '@nivo/radar'\nimport { Container } from 'react-bootstrap'\n\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\n\nimport FoodsService from '../../../service/foods'\n\nclass FoodStats extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            food : []\n        }\n        this.foodsService = new FoodsService()\n    }\n\n    bringFoods = () => {\n        this.foodsService.getFoods()\n            .then(response => {\n                this.setState({ food: response.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    componentDidMount = () =>{\n        this.bringFoods()\n    }\n\n    render(){\n        const data = this.state.food.slice(0, 6)\n        \n        const properties = {fat: 'Grasa', protein: 'Proteina', carbs: 'Carbohidratos'}\n        const foodNames = data.map(f => f.name)\n\n        const nutritionValues = Object.keys(properties).map((propertyKey) => {\n\n            const newData = {\n                property: properties[propertyKey]\n            }\n\n            data.map(food => {\n                return newData[food.name] = food[propertyKey]\n            })\n\n            return newData\n        })\n\n\n        const FoodPrices = data.map((food) => {\n            const newData = {\n                \"id\": food.name, \n                \"label\": food.name, \n                \"value\": food.price\n            }\n            return newData\n        })\n\n        const nutritionalComparison = data.map((foods)=>{\n            const newData = {\n                \"foodNames\": foods.name, \n                \"Grasa\": foods.fat, \n                \"Carbohidrátos\": foods.carbs, \n                \"Proteína\": foods.protein\n            }\n            return newData\n        })\n        \n        return(\n            <Container className='backg-stats'>\n                <h1 style={{marginBottom: '50px'}}>Estadísticas</h1>\n                <h3 style={{position: 'absolute'}}>Aportes Nutricionales</h3>\n                <Row style={{height : '300px', marginBottom: '100px', backgroundColor: 'rgba(255, 255, 255, 0.6)'}}>\n                    <ResponsiveBar\n                    keys={foodNames}\n                    data={nutritionValues}\n                    indexBy='property'\n                    margin={{ top: 50, right: 140, bottom: 50, left: 60 }}\n                    padding={0.3}\n                    colors={{ scheme: 'set3' }}\n                    defs={[\n                        {\n                            id: 'dots',\n                            type: 'patternDots',\n                            background: 'inherit',\n                            color: '#38bcb2',\n                            size: 4,\n                            padding: 1,\n                            stagger: true\n                        },\n                        {\n                            id: 'lines',\n                            type: 'patternLines',\n                            background: 'inherit',\n                            color: '#eed312',\n                            rotation: -45,\n                            lineWidth: 6,\n                            spacing: 10\n                        }\n                    ]}\n                    fill={[\n                        {\n                            match: {\n                                id: 'Aguacate'\n                            },\n                            id: 'dots'\n                        },\n                        {\n                            match: {\n                                id: 'Espárragos'\n                            },\n                            id: 'lines'\n                        }\n                    ]}\n                    axisBottom={{\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'Valor Nutricional',\n                        legendPosition: 'middle',\n                        legendOffset: 46\n                    }}\n                    axisLeft={{\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'Aporte',\n                        legendPosition: 'middle',\n                        legendOffset: -50\n                    }}\n                    labelSkipWidth={12}\n                    labelSkipHeight={12}\n                    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 2 ] ] }}\n                    legends={[\n                        {\n                            dataFrom: 'keys',\n                            anchor: 'bottom-right',\n                            direction: 'column',\n                            justify: false,\n                            translateX: 120,\n                            translateY: 0,\n                            itemsSpacing: 5,\n                            itemWidth: 100,\n                            itemHeight: 20,\n                            itemDirection: 'left-to-right',\n                            itemOpacity: 0.85,\n                            symbolSize: 20,\n                            effects: [\n                                {\n                                    on: 'hover',\n                                    style: {\n                                        itemOpacity: 1\n                                    }\n                                }\n                            ]\n                        }\n                    ]}\n                    animate={true}\n                    motionStiffness={90}\n                    motionDamping={15}\n                    />\n                </Row>\n\n                <Row style={{height : '300px', backgroundColor: 'rgba(255, 255, 255, 0.6)'}}>\n                    <Col md={7}>\n                    <h3 style={{position: 'absolute'}}>Comparativa de precios</h3>\n                        <ResponsivePie\n                            data={FoodPrices}\n                            margin={{ top: 65, right: 0, bottom: 60, left: 0 }}\n                            innerRadius={0.15}\n                            padAngle={45}\n                            colors={{ scheme: 'accent' }}\n                            borderWidth={1}\n                            borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n                            radialLabelsLinkDiagonalLength={5}\n                            radialLabelsSkipAngle={10}\n                            radialLabelsTextXOffset={6}\n                            radialLabelsTextColor=\"#333333\"\n                            radialLabelsLinkOffset={0}\n                            radialLabelsLinkStrokeWidth={1}\n                            radialLabelsLinkColor={{ from: 'color' }}\n                            slicesLabelsSkipAngle={10}\n                            slicesLabelsTextColor=\"#333333\"\n                            animate={true}\n                            motionStiffness={90}\n                            motionDamping={15}\n                            defs={[\n                                {\n                                    id: 'dots',\n                                    type: 'patternDots',\n                                    background: 'inherit',\n                                    color: 'rgba(255, 255, 255, 0.3)',\n                                    size: 4,\n                                    padding: 1,\n                                    stagger: true\n                                },\n                                {\n                                    id: 'lines',\n                                    type: 'patternLines',\n                                    background: 'inherit',\n                                    color: 'rgba(255, 255, 255, 0.3)',\n                                    rotation: -45,\n                                    lineWidth: 6,\n                                    spacing: 10\n                                }\n                            ]}\n                            fill={[\n                                {\n                                    match: {\n                                        id: 'Espárragos'\n                                    },\n                                    id: 'lines'\n                                },\n                                {\n                                    match: {\n                                        id: 'Aguacate'\n                                    },\n                                    id: 'dots'\n                                },\n                                {\n                                    match: {\n                                        id: 'Pepino'\n                                    },\n                                    id: 'lines'\n                                },\n                                {\n                                    match: {\n                                        id: 'Tomate rama'\n                                    },\n                                    id: 'dots'\n                                },\n                                {\n                                    match: {\n                                        id: 'Berenjena'\n                                    },\n                                    id: 'lines'\n                                }\n                            ]}\n                            legends={[\n                                {\n                                    anchor: 'left',\n                                    direction: 'column',\n                                    translateY: 50,\n                                    itemsSpacing: 10,\n                                    itemWidth: 100,\n                                    itemHeight: 10,\n                                    itemTextColor: '#999',\n                                    symbolSize: 18,\n                                    symbolShape: 'circle',\n                                    effects: [\n                                        {\n                                            on: 'hover',\n                                            style: {\n                                                itemTextColor: '#000'\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]}\n                        />\n                    </Col>\n\n                    <Col md={5}>\n                    <h3 style={{position: 'absolute'}}>Comparativa Nutricional</h3>\n                        <ResponsiveRadar\n                            data={nutritionalComparison}\n                            keys={['Grasa', 'Carbohidrátos','Proteína']}\n                            indexBy= \"foodNames\"\n                            maxValue=\"auto\"\n                            margin={{ top: 70, right: 80, bottom: 40, left: 80 }}\n                            curve=\"linearClosed\"\n                            borderColor=\"inherit\"\n                            gridLevels={5}\n                            gridShape=\"circular\"\n                            gridLabelOffset={20}\n                            enableDots={true}\n                            dotSize={5}\n                            dotColor=\"white\"\n                            dotBorderWidth={2}\n                            dotBorderColor={{ from: 'color' }}\n                            enableDotLabel={true}\n                            dotLabel=\"value\"\n                            dotLabelYOffset={-12}\n                            colors={{ scheme: 'category10' }}\n                            fillOpacity={0.55}\n                            blendMode=\"multiply\"\n                            animate={true}\n                            motionStiffness={90}\n                            motionDamping={15}\n                            isInteractive={true}\n                            legends={[\n                                {\n                                    anchor: 'bottom-left',\n                                    direction: 'column',\n                                    translateX: -50,\n                                    translateY: -70,\n                                    itemWidth: 80,\n                                    itemHeight: 20,\n                                    itemTextColor: '#999',\n                                    symbolSize: 12,\n                                    symbolShape: 'circle',\n                                    effects: [\n                                        {\n                                            on: 'hover',\n                                            style: {\n                                                itemTextColor: '#000'\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n\n        )\n    }\n}\n\nexport default FoodStats\n\n","import React, { Component } from 'react'\nimport FoodsService from '../../../service/foods'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from \"react-bootstrap/Row\"\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Accordion from 'react-bootstrap/Accordion'  \nimport { ResponsivePie } from '@nivo/pie'\nimport { ResponsiveBar } from '@nivo/bar'\nimport Col from \"react-bootstrap/Col\"\n\n\nclass Diets extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            food: []\n        }\n        this.foodsService = new FoodsService()\n    }\n\n    getAllFood = () => {\n        this.foodsService.getFoods()\n             .then(response => this.setState({ food: response.data}))\n             .catch(err => console.log(err))\n    }\n\n    componentDidMount = () => {\n        this.getAllFood()\n    }\n\n    render() {\n        const dataFilter = this.state.food.filter((food) => food.protein > 3)\n        const dataSorted = dataFilter.sort((a, b) => a < b ? 1 : -1)\n        const data = dataSorted.slice(0, 9)\n        \n        const FoodProtein = data.map((food) => {\n            const newData = {\n                \"id\": food.name, \n                \"value\": food.protein   \n            }\n            return newData\n        })\n\n        const FoodKcal = data.map((food) => {\n            const newData = {\n                \"id\": food.name, \n                \"value\": food.kcal   \n            }\n            return newData\n        })\n        \n        const foodCarbs = data.map((food) => {\n            const newData = {\n                \"id\": food.name, \n                \"value\": food.carbs   \n            }\n            return newData\n        })\n        \n        return (\n\n            <Container className='backg-diets'>\n                <h1 style={{marginBottom: '50px'}}>Dietas</h1>\n                <Accordion>\n                    <Card style={{backgroundColor: '#ffffff66', alignItems: 'baseline', marginBottom: '100px'}} >\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" className='btn-dark btn' >\n                        Alimentos Ricos en proteína\n                        </Accordion.Toggle>\n                        <p style={{paddingLeft:'50px', textAlign:'justify'}}>Después del agua, las proteínas son el nutriente con mayor presencia en el cuerpo humano.\n                            Es por eso que son parte fundamental para nuestro desarrollo y bienestar físico ya que son un componente importante para la formación de los músculos, \n                            el cerebro y los órganos vitales del cuerpo, además de ayudar al correcto funcionamiento del sistema inmunológico e influir en el metabolismo.\n                        </p>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body >\n                                <Row style={{justifyContent:'flex-end'}}>\n                                    <Col md={4}>\n\n                                        <Row style={{height : '300px', backgroundColor: 'transparent', alignItems: 'center'}}>\n                                \n                                                <ResponsivePie\n                                                    data={FoodProtein}\n                                                    margin={{ top: 65, right: 0, bottom: 60, left: 0 }}\n                                                    innerRadius={0}\n                                                    padAngle={0}\n                                                    cornerRadius={45}\n                                                    colors={{ scheme: 'nivo' }}\n                                                    borderWidth={1}\n                                                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n                                                    radialLabelsSkipAngle={10}\n                                                    radialLabelsTextXOffset={6}\n                                                    radialLabelsTextColor=\"#333333\"\n                                                    radialLabelsLinkOffset={0}\n                                                    radialLabelsLinkStrokeWidth={1}\n                                                    radialLabelsLinkColor={{ from: 'color' }}\n                                                    slicesLabelsSkipAngle={5}\n                                                    radialLabelsLinkDiagonalLength={20}\n                                                    radialLabelsLinkHorizontalLength={20}\n                                                    slicesLabelsTextColor=\"#333333\"\n                                                    defs={[\n                                                        {\n                                                            id: 'dots',\n                                                            type: 'patternDots',\n                                                            background: 'inherit',\n                                                            color: 'rgba(255, 255, 255, 0.3)',\n                                                            size: 4,\n                                                            padding: 1,\n                                                            stagger: true\n                                                        },\n                                                        {\n                                                            id: 'lines',\n                                                            type: 'patternLines',\n                                                            background: 'inherit',\n                                                            color: 'rgba(255, 255, 255, 0.3)',\n                                                            rotation: -45,\n                                                            lineWidth: 6,\n                                                            spacing: 10\n                                                        }\n                                                    ]}\n                                                    fill={[\n                                                        {\n                                                            match: {\n                                                                id: 'Espárragos'\n                                                            },\n                                                            id: 'lines'\n                                                        },\n                                                        {\n                                                            match: {\n                                                                id: 'Aguacate'\n                                                            },\n                                                            id: 'dots'\n                                                        },\n                                                        {\n                                                            match: {\n                                                                id: 'Pepino'\n                                                            },\n                                                            id: 'lines'\n                                                        },\n                                                        {\n                                                            match: {\n                                                                id: 'Tomate rama'\n                                                            },\n                                                            id: 'dots'\n                                                        },\n                                                        {\n                                                            match: {\n                                                                id: 'Berenjena'\n                                                            },\n                                                            id: 'lines'\n                                                        }\n                                                    ]}\n                                                />\n                                            </Row>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <Row style={{margin: 'auto', width: '85%', justifyContent: 'center'}} >\n                                            {data.map((food, idx) => { return (\n                                            <Link to={`/alimento/${food._id}`} style={{textDecoration: 'none', color: 'inherit'}} key={idx}>\n                                                <Card className='diet-card' >    \n                                                    <img src={food.img} alt={food.name} style={{textAlign: 'center'}}/>\n                                                    <h3 style={{textAlign: 'center', fontSize: '16px', margin: 0}}>{food.name} </h3>\n                                                </Card>\n                                            </Link>\n                                            )})}\n                                        </Row>\n                                    </Col>\n                                </Row>\n\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n\n                    \n\n                    <Card style={{backgroundColor: '#ffffff66', alignItems: 'baseline', marginBottom: '100px'}} >\n                        <Accordion.Toggle as={Card.Header} eventKey=\"2\" className='btn-dark btn'>\n                        Alimentos Ricos en Carbohidrátos\n                        </Accordion.Toggle>\n                        <p style={{paddingLeft:'50px', textAlign:'justify'}}>\n                            Se recomienda que entre un 45-65% de las calorías totales de la dieta diaria proceda de los hidratos de carbonos.\n                            Los hidrátos de carbono permiten que tu cuerpo se mueva: son la principal fuente de energía, por delante de las grasas y las proteínas. La glucosa de los hidratos de \n                            carbono pasa directamente al cerebro para que tu mente pueda funcionar, además mejoran el estado de ánimo: los hidratos de carbono complejos son ricos en vitamina B, \n                            esencial para el buen funcionamiento del sistema nervioso y el estado de ánimo.\n                        </p>\n                        <Accordion.Collapse eventKey=\"2\">\n                            <Card.Body >\n                                <Row style={{justifyContent:'flex-end'}}>\n                                    <Col sm={6}>\n                                        <Row style={{margin: 'auto', width: '85%', justifyContent: 'center'}} >\n                                            {data.map((food, idx) => { return (\n                                            <Link to={`/alimento/${food._id}`} style={{textDecoration: 'none', color: 'inherit'}} key={idx}>\n                                                <Card className='diet-card' >    \n                                                    <img src={food.img} alt={food.name} style={{textAlign: 'center'}}/>\n                                                    <h3 style={{textAlign: 'center', fontSize: '16px', margin: 0}}>{food.name} </h3>\n                                                </Card>\n                                            </Link>\n                                            )})}\n                                        </Row>\n                                    </Col>\n                                    <Col md={5}>\n\n                                        <Row style={{height : '300px', backgroundColor: 'transparent', alignItems: 'center'}}>\n                                \n                                            <ResponsiveBar\n                                                keys={['value']}\n                                                data={foodCarbs}\n                                                indexBy={'id'}\n                                                margin={{ top: 50, right: 140, bottom: 50, left: 60 }}\n                                                padding={0.3}\n                                                colors={{ scheme: 'set3' }}\n                                                axisBottom={{\n                                                    tickSize: 5,\n                                                    tickPadding: 2,\n                                                    tickRotation: -40,\n\n                                                }}\n                                                axisLeft={{\n                                                    tickSize: 5,\n                                                    tickPadding: 8,\n                                                    tickRotation: 0,\n                                                    legend: 'Aporte',\n                                                    legendPosition: 'middle',\n                                                    legendOffset: -50\n                                                }}\n                                                labelSkipWidth={12}\n                                                labelSkipHeight={12}\n                                                labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 2 ] ] }}\n                                                animate={true}\n                                                motionStiffness={90}\n                                                motionDamping={15}\n                                                />\n                                            </Row>\n                                    </Col>\n                                    \n                                </Row>\n\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n\n                    <Card style={{backgroundColor: '#ffffff66', alignItems: 'baseline', marginBottom: '100px'}} >\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"1\" className='btn-dark btn'>\n                        Alimentos Calóricos\n                        </Accordion.Toggle>\n                        <p style={{paddingLeft:'50px', textAlign:'justify'}}>Las calorías son indispensables para el desarrollo del individuo, para absorber nutrientes de los alimentos, \n                            y para las actividades físicas o actividades que generan mucho estrés. Refiriéndose a los alimentos, dice que aunque el número de calorías varía entre ellos, \n                            todos las contienen, desde un filete de salmón, hasta los pepinos y el pan dulce.\n                        </p>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card.Body >\n                                <Row style={{justifyContent:'flex-end'}}>\n                                    <Col md={4}>\n\n                                        <Row style={{height : '300px', backgroundColor: 'transparent', alignItems: 'center'}}>\n                                \n                                            <ResponsivePie\n                                                data={FoodKcal}\n                                                margin={{ top: 65, right: 0, bottom: 60, left: 0 }}\n                                                innerRadius={0.6}\n                                                padAngle={5}\n                                                colors={{ scheme: 'nivo' }}\n                                                borderWidth={1}\n                                                borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n                                                radialLabelsSkipAngle={10}\n                                                radialLabelsTextXOffset={6}\n                                                radialLabelsTextColor=\"#333333\"\n                                                radialLabelsLinkOffset={0}\n                                                radialLabelsLinkStrokeWidth={1}\n                                                radialLabelsLinkColor={{ from: 'color' }}\n                                                slicesLabelsSkipAngle={10}\n                                                slicesLabelsTextColor=\"#333333\"\n                                                animate={true}\n                                                motionStiffness={90}\n                                                motionDamping={15}\n                                                defs={[\n                                                    {\n                                                        id: 'dots',\n                                                        type: 'patternDots',\n                                                        background: 'inherit',\n                                                        color: 'rgba(255, 255, 255, 0.3)',\n                                                        size: 4,\n                                                        padding: 1,\n                                                        stagger: true\n                                                    },\n                                                    {\n                                                        id: 'lines',\n                                                        type: 'patternLines',\n                                                        background: 'inherit',\n                                                        color: 'rgba(255, 255, 255, 0.3)',\n                                                        rotation: -45,\n                                                        lineWidth: 6,\n                                                        spacing: 10\n                                                    }\n                                                ]}\n                                                fill={[\n                                                    {\n                                                        match: {\n                                                            id: 'Espárragos'\n                                                        },\n                                                        id: 'lines'\n                                                    },\n                                                    {\n                                                        match: {\n                                                            id: 'Aguacate'\n                                                        },\n                                                        id: 'dots'\n                                                    },\n                                                    {\n                                                        match: {\n                                                            id: 'Pepino'\n                                                        },\n                                                        id: 'lines'\n                                                    },\n                                                    {\n                                                        match: {\n                                                            id: 'Tomate rama'\n                                                        },\n                                                        id: 'dots'\n                                                    },\n                                                    {\n                                                        match: {\n                                                            id: 'Berenjena'\n                                                        },\n                                                        id: 'lines'\n                                                    }\n                                                ]}\n                                            />\n                                        </Row>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <Row style={{margin: 'auto', width: '85%', justifyContent: 'center'}} >\n                                            {data.map((food, idx) => { return (\n                                            <Link to={`/alimento/${food._id}`} style={{textDecoration: 'none', color: 'inherit'}} key={idx}>\n                                                <Card className='diet-card' >    \n                                                    <img src={food.img} alt={food.name} style={{textAlign: 'center'}}/>\n                                                    <h3 style={{textAlign: 'center', fontSize: '16px', margin: 0}}>{food.name} </h3>\n                                                </Card>\n                                            </Link>\n                                            )})}\n                                        </Row>\n                                    </Col>\n                                </Row>\n\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n            </Container>\n\n        )\n    }\n}\n\nexport default Diets","import React, { Component } from 'react'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nimport { Switch, Route } from 'react-router-dom'\nimport Navbar from './ui/navbar/Navbar'\nimport IndexPage from './pages/index/Index-page'\n\nimport Signup from './pages/signup/Signup'\n\nimport AuthService from '../service/auth.service'\nimport FoodsIndex from './pages/foods/FoodIndex'\nimport FoodDetails from './pages/food-details/FoodDetails'\nimport FoodStats from './pages/statistics/FoodStats'\nimport Diets from './pages/diet/Diets'\n\nclass App extends Component {\n\n    constructor() {\n        super()\n        this.state = { \n            loggedInUser: null, \n        }\n        this.authService = new AuthService()\n    }\n\n    setTheUser = userObj => this.setState({ loggedInUser: userObj }, () => console.log('El estado de App ha cambiado:', this.state))\n\n    fetchUser = () => {\n        const currentUser = localStorage.currentUser || false\n        this.setTheUser(JSON.parse(currentUser))\n    }\n\n    componentDidMount = () => {\n        this.fetchUser()\n    }\n\n\n    render() {\n        return (\n            <>\n                <Route exact render={ props => <Navbar setTheUser={this.setTheUser} loggedInUser={this.state.loggedInUser} {...props}/>} />\n                <Switch>\n                    <Route path=\"/\" exact render={ props => <IndexPage loggedInUser={this.state.loggedInUser} setTheUser={this.setTheUser} {...props}/>} />\n                    <Route path=\"/alimentos\" exact render={ props => <FoodsIndex loggedInUser={this.state.loggedInUser} {...props}/>} />\n                    <Route path=\"/alimento/:foodId\" exact render={ props => <FoodDetails loggedInUser={this.state.loggedInUser} {...props}/>} />\n                    <Route path=\"/estadisticas\" exact render={ props => <FoodStats loggedInUser={this.state.loggedInUser} {...props}/>} />\n                    <Route path=\"/dietas\" exact render={ props => <Diets loggedInUser={this.state.loggedInUser} {...props}/>} />\n                    <Route path=\"/signup\" exact render={props => <Signup  setTheUser={this.setTheUser} {...props}/>} />\n                </Switch>\n            </>\n        )\n    }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'))"],"sourceRoot":""}